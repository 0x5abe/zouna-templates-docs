//------------------------------------------------
//--- 010 Editor v13.0 Binary Template
//
//      File: Ratatouille Bitmap_Z
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: *.Bitmap_Z
//  ID Bytes: 
//   History: 
//------------------------------------------------
LittleEndian();

struct LinkInfo {
    uint32 linkCrc32;
    uint32 linkCount;
    uint32 linkedCrc32[linkCount];
    ubyte links[header.linkSize - (linkCount * 4) - 8];
};

struct ObjectHeader {
    uint32 dataSize;
    uint32 linkSize;
    uint32 decompressedSize;
    uint32 compressedSize;
    uint32 classCrc32;
    uint32 nameCrc32;
    LinkInfo linkInfo;
};

struct bitmap_z {
    ObjectHeader header;
    uint32 width;
    uint32 height;
    uint32 precalculatedSize;
    byte format;
    byte formatCopy;
    byte paletteFormat;
    byte transpFormat;
    byte mipCount;
    byte unkSetTo4;
    uint16 flag;
    if(precalculatedSize != 0){
        byte dds[precalculatedSize];
    }
    else if(format == 12){
        byte tex[width*height*4];
    }
    else{
        byte tex[width*height*3];
    };
}Bitmap_Z;